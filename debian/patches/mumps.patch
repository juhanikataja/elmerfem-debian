Add MUMPS linkage support in configure script and build system.

Index: elmerfem/fem/acx_elmer.m4
===================================================================
--- elmerfem.orig/fem/acx_elmer.m4	2010-07-20 16:36:31.000000000 -0400
+++ elmerfem/fem/acx_elmer.m4	2010-07-20 16:58:05.000000000 -0400
@@ -706,6 +706,94 @@
 fi
 ])dnl ACX_HYPRE
 
+dnl
+dnl @synopsis ACX_MUMPS([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+dnl
+dnl Look for MUMPS library
+dnl
+AC_DEFUN([ACX_MUMPS], [
+AC_PREREQ(2.50)
+AC_REQUIRE([ACX_MPI])
+AC_REQUIRE([AC_FC_LIBRARY_LDFLAGS])
+AC_REQUIRE([ACX_LANG_COMPILER_MS])
+acx_mumps_ok=no
+
+AC_ARG_WITH(mumps,
+	[AC_HELP_STRING([--with-mumps=<lib>], [Specify location of MUMPS])])
+case $with_mumps in
+	yes | "") ;;
+	no) acx_mumps_ok=disable ;;
+	-* | */* | *.a | *.so | *.so.* | *.o) MUMPS_LIBS="$with_mumps" ;;
+	*) MUMPS_LIBS="-l$with_mumps" ;;
+esac
+
+# Get fortran linker names of MUMPS functions to check for.
+#AC_FC_FUNC(mumps_function)
+mumps_function="dmumps_"
+
+acx_mumps_save_LIBS="$LIBS"
+
+LIBS="$MPI_LIBS $LAPACK_LIBS $BLAS_LIBS $LIBS $FCLIBS $FLIBS"
+
+# First, check MUMPS_LIBS environment variable
+if test $acx_mumps_ok = no; then
+if test "x$MUMPS_LIBS" != x; then
+	save_LIBS="$LIBS"; LIBS="$MUMPS_LIBS $LIBS"
+	AC_MSG_CHECKING([for $mumps_function in $MUMPS_LIBS])
+
+	if test "$acx_cv_c_compiler_ms" = "yes"; then
+		# windose shite
+		save_CFLAGS="$CFLAGS"
+		CFLAGS="$CFLAGS -Gz"
+		AC_LINK_IFELSE(
+		[int main ()
+		 {
+		   $mumps_function(1);
+		   return 0;
+		 }
+		],
+		[
+	      		acx_mumps_ok=yes
+		],
+		[
+	 	        MUMPS_LIBS=""
+		])
+		CFLAGS="$save_CFLAGS"
+	else
+		AC_TRY_LINK_FUNC($mumps_function, [acx_mumps_ok=yes], [MUMPS_LIBS=""])
+	fi
+
+	AC_MSG_RESULT($acx_mumps_ok)
+	LIBS="$save_LIBS"
+fi
+fi
+
+# General MUMPS test
+if test $acx_mumps_ok = no; then
+	AC_CHECK_LIB(dmumps, $mumps_function, [acx_mumps_ok=yes; MUMPS_LIBS="-ldmumps $MPI_LIBS"],,[-lm])
+	if test $acx_mumps_ok = no; then
+		save_LIBS="$LIBS"; LIBS="-lmumps_common -lpord -lscalapack -lblacs $LIBS"
+		AC_CHECK_LIB(dmumps, $mumps_function, [acx_mumps_ok=yes; MUMPS_LIBS="-ldmumps -lmumps_common -lpord -lscalapack -lblacs $MPI_LIBS"],,[-lm])
+		LIBS="$save_LIBS"
+	fi
+fi
+
+AC_SUBST(MUMPS_LIBS)
+
+LIBS="$acx_mumps_save_LIBS"
+
+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
+if test x"$acx_mumps_ok" = xyes; then
+        ifelse([$1],,AC_DEFINE(HAVE_MUMPS,1,[Define if you have a MUMPS library.]),[$1])
+	FCPPFLAGS="$FCPPFLAGS -DHAVE_MUMPS"
+	FCFLAGS="$FCFLAGS -I/usr/include"
+        :
+else
+        acx_mumps_ok=no
+        $2
+fi
+])dnl ACX_MUMPS
+
 dnl 
 dnl look for the std c libraries:
 dnl
Index: elmerfem/fem/configure.in
===================================================================
--- elmerfem.orig/fem/configure.in	2010-07-20 16:36:31.000000000 -0400
+++ elmerfem/fem/configure.in	2010-07-20 16:36:31.000000000 -0400
@@ -104,6 +104,7 @@
 ACX_ARPACK([], [AC_MSG_ERROR([We need arpack!])])
 ACX_PARPACK([], [AC_MSG_WARN([No parallel arpack found.])])
 ACX_HYPRE([], [AC_MSG_WARN([HYPRE not found, some functionaly will be disabled.])])
+ACX_MUMPS([], [AC_MSG_WARN([MUMPS not found, some functionaly will be disabled.])])
 ACX_UMFPACK([], [AC_MSG_WARN([UMFPACK not found, some functionaly will be disabled.])])
 ACX_MATC([], [AC_MSG_ERROR([libmatc $ELMER_LIBERRORMSG])])
 AC_CHECK_LIB(m,main,[UNIX_MATH_LIB="-lm"; LIBS="$LIBS -lm"],[UNIX_MATH_LIB=""])
@@ -176,7 +177,7 @@
   fi
 fi
 
-SOLVER_LIBS="$LIBS $ARPACK_LIBS $PARPACK_LIBS $HYPRE_LIBS $UMFPACK_LIBS $HUTI_LIBS $MATC_LIBS $EIOF_LIBS $LIBS $LAPACK_LIBS $BLAS_LIBS $FCLIBS $FLIBS $STDCXX_LIBS"
+SOLVER_LIBS="$LIBS $ARPACK_LIBS $PARPACK_LIBS $HYPRE_LIBS $MUMPS_LIBS $UMFPACK_LIBS $HUTI_LIBS $MATC_LIBS $EIOF_LIBS $LIBS $LAPACK_LIBS $BLAS_LIBS $FCLIBS $FLIBS $STDCXX_LIBS"
 
 dnl Host specific hacks.
 dnl
@@ -339,6 +340,7 @@
   BLAS                      $BLAS_LIBS
   LAPACK                    $LAPACK_LIBS
   HYPRE                     $HYPRE_LIBS
+  MUMPS                     $MUMPS_LIBS
   UMFPACK                   $UMFPACK_LIBS
   ARPACK		    $ARPACK_LIBS
   PARPACK		    $PARPACK_LIBS
